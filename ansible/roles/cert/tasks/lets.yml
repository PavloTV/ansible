---
- name: force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

- name: Temporary allow incoming http connections for letsencrypt (handler to block access after)
  ufw:
    rule: allow
    proto: tcp
    to_port: "80"
    comment: Allow incoming http connections for letsencrypt
  notify: Block incoming http connections for letsencrypt

- name: "Get Let's Encrypt account key file info"
  stat:
    path: "{{ letsencrypt_account_key }}"
  register: letsencrypt_account_key_file

- name: "Generate a Let's Encrypt account key"
  shell: "if [ ! -f {{ letsencrypt_account_key }} ]; then openssl genrsa 4096 | sudo tee {{ letsencrypt_account_key }}; fi"
  when: not letsencrypt_account_key_file.stat.exists
  tags: skip_ansible_lint


- name: "Generate Let's Encrypt private key"
  shell: "openssl genrsa 4096 | sudo tee /etc/letsencrypt/keys/{{ domain_name }}.key"
  register: result
  tags: skip_ansible_lint

- name: "Generate Let's Encrypt CSR"
  shell: "openssl req -new -sha256 -key /etc/letsencrypt/keys/{{ domain_name }}.key -subj \"/CN={{ domain_name }}\" -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf \"\n[SAN]\nsubjectAltName=DNS:{{ domain_name }}\")) | sudo tee /etc/letsencrypt/csrs/{{ domain_name }}.csr"
  args:
    executable: /bin/bash
  when: result is changed
  tags: skip_ansible_lint

- name: "Begin Let's Encrypt challenges"
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    terms_agreed: true
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.crt"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.crt"
    remaining_days: 91
  register: acme_challenge_your_domain
  changed_when: false

- name: "Create .well-known/acme-challenge directory"
  file:
    path: /var/www/html/.well-known/acme-challenge
    state: directory
    owner: www-data
    group: www-data
    mode: u=rwx,g=rx,o=rx

- name: "Implement http-01 challenge files"
  copy:
    content: "{{ acme_challenge_your_domain['challenge_data'][item]['http-01']['resource_value'] }}"
    dest: "/var/www/html/{{ acme_challenge_your_domain['challenge_data'][item]['http-01']['resource'] }}"
    owner: www-data
    group: www-data
    mode: u=rw,g=r,o=r
  with_items:
    - "{{ domain_name }}"

- name: "Complete Let's Encrypt challenges"
  acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ letsencrypt_csrs_dir }}/{{ domain_name }}.csr"
    dest: "{{ letsencrypt_certs_dir }}/{{ domain_name }}.pem"
    chain_dest: "{{ letsencrypt_certs_dir }}/chain_{{ domain_name }}.pem"
    fullchain_dest: "{{ letsencrypt_certs_dir }}/fullchain_{{ domain_name }}.pem"
    data: "{{ acme_challenge_your_domain }}"
  notify: Reload NGINX Configuration
